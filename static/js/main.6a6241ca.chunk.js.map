{"version":3,"sources":["utils/keys.js","component/Display.js","component/Button.js","component/ButtonPanel.js","logic/operate.js","logic/calculate.js","logic/isNumber.js","component/App.js","index.js"],"names":["keyCodes","BACKSPACE","EQUAL","ADD","SUB","MULTIPLY","DIV","PERCENT","DOT","methods","keyHandle","event","shiftKey","keyCode","String","fromCharCode","module","exports","Display","react_default","a","createElement","className","this","props","value","React","Component","Button","handleClick","_this","clickHandler","name","orange","wide","join","trim","onClick","ButtonPanel","buttonName","Button_Button","operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","eq","alert","div","Error","concat","calculate","obj","total","next","display","slice","length","test","result","includes","parseFloat","App","state","handleKeyDown","e","setState","document","addEventListener","removeEventListener","Display_Display","ButtonPanel_ButtonPanel","ReactDOM","render","App_App","getElementById"],"mappings":"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","file":"static/js/main.6a6241ca.chunk.js","sourcesContent":["const keyCodes = {\r\n  BACKSPACE: 8,\r\n  EQUAL: 13,\r\n  ADD: 187,\r\n  SUB: 189,\r\n  MULTIPLY: 56,\r\n  DIV: 191,\r\n  PERCENT: 53,\r\n  DOT: 190,\r\n};\r\n\r\nconst keyHandle = function(event) {\r\n  if (event.shiftKey && event.keyCode === keyCodes.BACKSPACE) {\r\n    return \"AC\";\r\n  }\r\n\r\n  if (event.keyCode === keyCodes.BACKSPACE) {\r\n    return \"\\u232b\";\r\n  }\r\n\r\n  if (event.shiftKey && event.keyCode === keyCodes.ADD) {\r\n    return \"+\";\r\n  }\r\n  if (event.keyCode === keyCodes.EQUAL) {\r\n    return \"=\";\r\n  }\r\n  if (event.shiftKey && event.keyCode === keyCodes.SUB) {\r\n    return \"+/-\";\r\n  } else if (event.keyCode === keyCodes.SUB) {\r\n    return \"-\";\r\n  }\r\n  if (event.shiftKey && event.keyCode === keyCodes.MULTIPLY) {\r\n    return \"x\";\r\n  }\r\n  if (event.keyCode === keyCodes.DIV) {\r\n    return \"รท\";\r\n  }\r\n  if (event.shiftKey && event.keyCode === keyCodes.PERCENT) {\r\n    return \"%\";\r\n  }\r\n  if (event.keyCode === keyCodes.DOT) {\r\n    return \".\";\r\n  }\r\n\r\n  //handle only numbers keys\r\n  if (\r\n    (event.keyCode >= 48 && event.keyCode <= 57) ||\r\n    (event.keyCode >= 96 && event.keyCode <= 105)\r\n  ) {\r\n    let keyCode = event.keyCode;\r\n\r\n    //adjust to work with numpad numbers\r\n    if (keyCode >= 96) {\r\n      keyCode -= 48;\r\n    }\r\n\r\n    return String.fromCharCode(keyCode);\r\n  }\r\n};\r\n\r\nconst methods = {\r\n  keyCodes,\r\n  keyHandle,\r\n};\r\n\r\nmodule.exports = methods;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Display.css\";\r\n\r\nexport default class Display extends React.Component {\r\n  static propTypes = {\r\n    value: PropTypes.string,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"component-display\">\r\n        <div>{this.props.value}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Button.css\";\r\n\r\nexport default class Button extends React.Component {\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    orange: PropTypes.bool,\r\n    wide: PropTypes.bool,\r\n    clickHandler: PropTypes.func,\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.props.clickHandler(this.props.name);\r\n  };\r\n\r\n  render() {\r\n    const className = [\r\n      \"component-button\",\r\n      this.props.orange ? \"orange\" : \"\",\r\n      this.props.wide ? \"wide\" : \"\",\r\n    ];\r\n\r\n    return (\r\n      <div className={className.join(\" \").trim()}>\r\n        <button className=\"ripple\" onClick={this.handleClick}>\r\n          {this.props.name}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Button from \"./Button\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./ButtonPanel.css\";\r\n\r\nexport default class ButtonPanel extends React.Component {\r\n  static propTypes = {\r\n    clickHandler: PropTypes.func,\r\n  };\r\n\r\n  handleClick = buttonName => {\r\n    this.props.clickHandler(buttonName);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"component-button-panel\">\r\n        <div>\r\n          <Button name=\"AC\" clickHandler={this.handleClick} />\r\n          <Button name={\"\\u232b\"} clickHandler={this.handleClick} />\r\n\r\n          <Button name=\"%\" clickHandler={this.handleClick} />\r\n          <Button name=\"รท\" clickHandler={this.handleClick} orange />\r\n        </div>\r\n        <div>\r\n          <Button name=\"7\" clickHandler={this.handleClick} />\r\n          <Button name=\"8\" clickHandler={this.handleClick} />\r\n          <Button name=\"9\" clickHandler={this.handleClick} />\r\n          <Button name=\"x\" clickHandler={this.handleClick} orange />\r\n        </div>\r\n        <div>\r\n          <Button name=\"4\" clickHandler={this.handleClick} />\r\n          <Button name=\"5\" clickHandler={this.handleClick} />\r\n          <Button name=\"6\" clickHandler={this.handleClick} />\r\n          <Button name=\"-\" clickHandler={this.handleClick} orange />\r\n        </div>\r\n        <div>\r\n          <Button name=\"1\" clickHandler={this.handleClick} />\r\n          <Button name=\"2\" clickHandler={this.handleClick} />\r\n          <Button name=\"3\" clickHandler={this.handleClick} />\r\n          <Button name=\"+\" clickHandler={this.handleClick} orange />\r\n        </div>\r\n        <div>\r\n          <Button name=\"0\" clickHandler={this.handleClick} />\r\n          <Button name=\"+/-\" clickHandler={this.handleClick} />\r\n\r\n          <Button name=\".\" clickHandler={this.handleClick} />\r\n          <Button name=\"=\" clickHandler={this.handleClick} orange />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Big from \"big.js\";\r\n\r\nexport default function operate(numberOne, numberTwo, operation) {\r\n  const one = Big(numberOne || \"0\");\r\n  const two = Big(\r\n    numberTwo || (operation === \"รท\" || operation === \"x\" ? \"1\" : \"0\"),\r\n  ); //If dividing or multiplying, then 1 maintains current value in cases of null\r\n  if (operation === \"+\") {\r\n    return one.plus(two).toString();\r\n  }\r\n  if (operation === \"-\") {\r\n    return one.minus(two).toString();\r\n  }\r\n  if (operation === \"x\") {\r\n    return one.times(two).toString();\r\n  }\r\n  if (operation === \"รท\") {\r\n    if (two.eq(0)) {\r\n      alert(\"Divide by 0 error\");\r\n      return \"0\";\r\n    } else {\r\n      return one.div(two).toString();\r\n    }\r\n  }\r\n  throw Error(`Unknown operation '${operation}'`);\r\n}\r\n","import Big from \"big.js\";\r\n\r\nimport operate from \"./operate\";\r\nimport isNumber from \"./isNumber\";\r\n\r\n/**\r\n * Given a button name and a calculator data object, return an updated\r\n * calculator data object.\r\n *\r\n * Calculator data object contains:\r\n *   total:String      the running total\r\n *   next:String       the next number to be operated on with the total\r\n *   operation:String  +, -, etc.\r\n */\r\nexport default function calculate(obj, buttonName) {\r\n  if (buttonName === \"AC\") {\r\n    return {\r\n      total: null,\r\n      next: null,\r\n      operation: null,\r\n    };\r\n  }\r\n\r\n  if (buttonName === \"\\u232b\") {\r\n    let display = obj.total || obj.next;\r\n    if (!obj.operation && display && display !== \"0\") {\r\n      display = display.slice(0, display.length - 1);\r\n      return {\r\n        total: obj.total ? display : obj.total,\r\n        next: obj.next ? display : obj.next,\r\n        operation: obj.operation,\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  if (isNumber(buttonName)) {\r\n    if (buttonName === \"0\" && obj.next === \"0\") {\r\n      return {};\r\n    }\r\n    // If there is an operation, update next\r\n    if (obj.operation) {\r\n      if (obj.next) {\r\n        return { next: obj.next + buttonName };\r\n      }\r\n      return { next: buttonName };\r\n    }\r\n    // If there is no operation, update next and clear the value\r\n    if (obj.next) {\r\n      const next = obj.next === \"0\" ? buttonName : obj.next + buttonName;\r\n      return {\r\n        next,\r\n        total: null,\r\n      };\r\n    }\r\n    return {\r\n      next: buttonName,\r\n      total: null,\r\n    };\r\n  }\r\n\r\n  if (buttonName === \"%\") {\r\n    if (obj.operation && obj.next) {\r\n      const result = operate(obj.total, obj.next, obj.operation);\r\n      return {\r\n        total: Big(result)\r\n          .div(Big(\"100\"))\r\n          .toString(),\r\n        next: null,\r\n        operation: null,\r\n      };\r\n    }\r\n    if (obj.next) {\r\n      return {\r\n        next: Big(obj.next)\r\n          .div(Big(\"100\"))\r\n          .toString(),\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  if (buttonName === \".\") {\r\n    if (obj.next) {\r\n      // ignore a . if the next number already has one\r\n      if (obj.next.includes(\".\")) {\r\n        return {};\r\n      }\r\n      return { next: obj.next + \".\" };\r\n    }\r\n    return { next: \"0.\" };\r\n  }\r\n\r\n  if (buttonName === \"=\") {\r\n    if (obj.next && obj.operation) {\r\n      return {\r\n        total: operate(obj.total, obj.next, obj.operation),\r\n        next: null,\r\n        operation: null,\r\n      };\r\n    } else {\r\n      // '=' with no operation, nothing to do\r\n      return {};\r\n    }\r\n  }\r\n\r\n  if (buttonName === \"+/-\") {\r\n    if (obj.next) {\r\n      return { next: (-1 * parseFloat(obj.next)).toString() };\r\n    }\r\n    if (obj.total) {\r\n      return { total: (-1 * parseFloat(obj.total)).toString() };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  // Button must be an operation\r\n\r\n  // When the user presses an operation button without having entered\r\n  // a number first, do nothing.\r\n  // if (!obj.next && !obj.total) {\r\n  //   return {};\r\n  // }\r\n\r\n  // User pressed an operation button and there is an existing operation\r\n  if (obj.operation) {\r\n    return {\r\n      total: operate(obj.total, obj.next, obj.operation),\r\n      next: null,\r\n      operation: buttonName,\r\n    };\r\n  }\r\n\r\n  // no operation yet, but the user typed one\r\n\r\n  // The user hasn't typed a number yet, just save the operation\r\n  if (!obj.next) {\r\n    return { operation: buttonName };\r\n  }\r\n\r\n  // save the operation and shift 'next' into 'total'\r\n  return {\r\n    total: obj.next,\r\n    next: null,\r\n    operation: buttonName,\r\n  };\r\n}\r\n","export default function isNumber(item) {\r\n  return /[0-9]+/.test(item);\r\n}\r\n","import React from \"react\";\r\nimport Display from \"./Display\";\r\nimport ButtonPanel from \"./ButtonPanel\";\r\nimport calculate from \"../logic/calculate\";\r\nimport { keyHandle } from \"../utils/keys\";\r\n\r\nimport \"./App.css\";\r\n\r\nexport default class App extends React.Component {\r\n  state = {\r\n    total: null,\r\n    next: null,\r\n    operation: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    this.setState(calculate(this.state, keyHandle(e)));\r\n  };\r\n\r\n  handleClick = buttonName => {\r\n    this.setState(calculate(this.state, buttonName));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"component-app\">\r\n        <Display value={this.state.next || this.state.total || \"0\"} />\r\n        <ButtonPanel clickHandler={this.handleClick} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./component/App\";\r\nimport \"./index.css\";\r\nimport \"github-fork-ribbon-css/gh-fork-ribbon.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}